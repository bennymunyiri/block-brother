/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import { Provider } from "@ethersproject/providers";
import type {
  ICrossChainCounter,
  ICrossChainCounterInterface,
} from "../ICrossChainCounter";

const _abi = [
  {
    inputs: [],
    name: "AdminBadRole",
    type: "error",
  },
  {
    inputs: [],
    name: "CallProxyBadRole",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    name: "ChainNotSupported",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "nativeSender",
        type: "bytes",
      },
      {
        internalType: "uint256",
        name: "chainIdFrom",
        type: "uint256",
      },
    ],
    name: "NativeSenderBadRole",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "newCounterValue",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint8",
        name: "amount",
        type: "uint8",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "chainFrom",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "initiator",
        type: "address",
      },
    ],
    name: "CounterIncremented",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "incrementorAddress",
        type: "bytes",
      },
    ],
    name: "SupportedChainAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "chainId",
        type: "uint256",
      },
    ],
    name: "SupportedChainRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint8",
        name: "_amount",
        type: "uint8",
      },
      {
        internalType: "address",
        name: "_initiator",
        type: "address",
      },
    ],
    name: "receiveIncrementCommand",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class ICrossChainCounter__factory {
  static readonly abi = _abi;
  static createInterface(): ICrossChainCounterInterface {
    return new utils.Interface(_abi) as ICrossChainCounterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ICrossChainCounter {
    return new Contract(address, _abi, signerOrProvider) as ICrossChainCounter;
  }
}
