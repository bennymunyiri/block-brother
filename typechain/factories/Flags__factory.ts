/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Flags, FlagsInterface } from "../Flags";

const _abi = [
  {
    inputs: [],
    name: "MULTI_SEND",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "PROXY_WITH_SENDER",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "REVERT_IF_EXTERNAL_FAIL",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SEND_EXTERNAL_CALL_GAS_LIMIT",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SEND_HASHED_DATA",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "UNWRAP_ETH",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60eb610039600b82828239805160001a60731461002c57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe730000000000000000000000000000000000000000301460806040526004361060745760003560e01c8063878174a9116055578063878174a91460a0578063a81537581460a7578063f3ff90631460ae57600080fd5b8063222f81671460795780633b1805941460925780637b8332f9146099575b600080fd5b6080600381565b60405190815260200160405180910390f35b6080600081565b6080600181565b6080600281565b6080600581565b608060048156fea26469706673582212205b255c35e12d684e167562be2a0233891e3aa23f8c2ae2ee25a4d65de5058b1d64736f6c63430008070033";

export class Flags__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Flags> {
    return super.deploy(overrides || {}) as Promise<Flags>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Flags {
    return super.attach(address) as Flags;
  }
  connect(signer: Signer): Flags__factory {
    return super.connect(signer) as Flags__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): FlagsInterface {
    return new utils.Interface(_abi) as FlagsInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Flags {
    return new Contract(address, _abi, signerOrProvider) as Flags;
  }
}
